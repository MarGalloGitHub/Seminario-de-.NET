/*
12) Realizar un análisis sintáctico para determinar si los paréntesis en una expresión aritmética están 
bien balanceados. Verificar que por cada paréntesis de apertura exista uno de cierre en la cadena de 
entrada. Utilizar una pila para resolverlo. Los paréntesis de apertura de la entrada se almacenan en una 
pila hasta encontrar uno de cierre, realizándose entonces la extracción del último paréntesis de apertura 
almacenado. Si durante el proceso se lee un paréntesis de cierre y la pila está vacía, entonces la cadena 
es incorrecta. Al finalizar el análisis, la pila debe quedar vacía para que la cadena leída sea aceptada, de 
lo contrario la misma no es válida. 

*/


using System.Linq.Expressions;

Stack<Char> pila = new Stack<Char>();

string cadena1 = "   Haber si funciona )   ";
string cadena2 = "(Haber si funciona";
string cadena3 = " ( Haber si funciona ) ";



probarCon(cadena1);
probarCon(cadena2);
probarCon(cadena3);


void probarCon (string cadena){


int i = 0;
int cuantosNecesito = 0;
int cuantosTengo = 0;
try{
    foreach(Char letra in cadena)
    {   
        if(cadena[i].Equals('('))  // mirar ''
        {
            pila.Push(cadena[i]);
            cuantosNecesito++;
        }
        else
            if(cadena[i].Equals(')'))
            {
                cuantosTengo++;
               pila.Pop();
            }
        i++;
    }

    if(cuantosNecesito != cuantosTengo)
    {
        throw new Exception ("No hay una misma cantidad de '(' que de ')'");
    }

    Console.WriteLine("Salio bien");
}

catch(InvalidOperationException e)
{
    Console.WriteLine(e);
    Console.WriteLine("En español: haba ) pero no ( ");
}
catch{
    Console.WriteLine("no habia la misma cantidad de '(' que de ')' ");
}
}
